#!/bin/bash

##
# Helper functions for Makefile

# Strict bash scripting
set -euo pipefail -o errtrace
set -o allexport

##
# Functions

usage() {
	awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target>\033[0m\n"} /^[a-zA-Z_-]+:.*?##/ { printf "  \033[36m%-15s\033[0m %s\n", $1, $2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($0, 5) } ' "$1"
}

mk-path() {
  local num_regexp='^[0-9]+$'
  local chmod=""
  local uid="${UID}"
  local gid=""
  local owner=""
  local prefix=""
  local opt_recursive=0
  local chprefix=() 
  local path=""
  local pathes=()
  set -- $*
  while [ $# -gt 0 ]; do
    case "${1}" in
      -o) shift; uid="${1}"; shift;;
      -g) shift; gid="${1}"; shift;;
      -r) shift; chprefix=("$chprefix[@]" -r);;
      -m) shift; chmod="${1}"; shift;;
      -*) shift;;
       *) pathes=("${pathes[*]}" "${1}"); shift;;
    esac
  done
  if [[ -n "${uid}" ]] && [[ ! "${uid}" =~ ${num_regexp} ]]; then uid="$(id -u ${uid})"; fi;
  if [[ -n "${gid}" ]] && [[ ! "${gid}" =~ ${num_regexp} ]]; then gid="$(id -g ${gid})"; fi; 
  if [[ -n "${gid}" ]]; then
    owner="${owner}:${gid}"
  fi
  if [[ "${UID}" != "${uid}" ]]; then
    prefix="sudo"
  fi
  for path in ${pathes[@]}; do
    log::notice "Creating path ${path}"
    if [[ ! -d "${path}" ]]; then
      echo ${prefix} mkdir -pv "${path}"
    fi
    if [[ -n "${owner}" ]]; then
      ${prefix} chown "${chown}" "${path}"
    fi
    if [[ -n "${chmod}" ]]; then
      ${prefix} chmod  "${chmod}" "${path}"
    fi
  done
}

rm-dir-if-empty() {
	if test -e "$1/"* 2>/dev/null; then 
		rm -fr "$1";
	else
		echo "non-empty: $1" >&2;
	fi;
}


mk-symlink() {
	# $1 source (file/dir)
	# $2 target /symlink
	if [[ -L "$2" ]] && [[ "$(readlink -f "$$2")" != "$$1" ]]; then
		rm -fv "$2"
	fi
	if [[ ! -L "$2" ]]; then
		ln -vs "$1" "$2"
	fi
}


##
# Main

set +o allexport

/bin/bash "$@"